# lmake_lines_of_code/Makefile.toml
# https://github.com/sagiegurari/cargo-make/blob/master/src/lib/Makefile.stable.toml

[config]
skip_core_tasks = true

#region: public callable tasks/flows

    [tasks.default]
    description = "show list of public callable tasks"
    clear = true
    dependencies = [
        "help_command_order"
    ]

    [tasks.check]
    description = "cargo check --release"
    clear = true
    command = "cargo"
    args = ["check","--release"]

    [tasks.dev]
    description = "cargo build development"
    clear = true
    dependencies = [
        "build_dev",
        "post_build_dev",
    ]

    [tasks.test]
    description = "cargo test"
    clear = true
    script = [
        "echo $ cargo test",
        "cargo test",
    ]

    [tasks.release]
    description = "cargo build release"
    clear = true
    dependencies = [
        # Binaries version is date
        "lmake_version_from_date",
        # Library version is semver
        # "semver_increment_patch",
        "build_release",
        "post_build_release",
    ]

    [tasks.run_rel0]
    description = "no-argument - target/release/${CARGO_MAKE_CRATE_NAME}"
    clear = true
    script = [
        "echo $ target/release/${CARGO_MAKE_CRATE_NAME}",
        "target/release/${CARGO_MAKE_CRATE_NAME} ",
    ]

    [tasks.fmt]
    description = "format code and git commit before"
    clear = true
    dependencies = [
        "commit_before_fmt",
        "cargo_fmt",
    ]

    [tasks.audit]
    description = "cargo audit - for warning dependencies"
    clear = true
    dependencies = [ "cargo_audit",]

    [tasks.doc]
    description = "cargo doc - create docs from doc comments"
    clear = true
    script= [
        "echo $ lmake_readme",
        # copy data from cargo.toml to readme.md, then include text from readme.md into *.rs doc comments
        "lmake_readme",
        "echo $ cargo doc --no-deps --document-private-items",
        # create doc from doc comments
        "cargo doc --no-deps --document-private-items",
        "echo $ codetour_export_to_md",
        # export code tour to md
        "codetour_export_to_md",
        # copy to /docs/ because it is github standard
        "echo $ rsync -a --info=progress2 --delete-after target/doc docs",
        "rsync -a --info=progress2 --delete-after target/doc docs",
        # message to help user with next move
        "echo after successful doc, run cargo make fmt msg_for_commit",
    ]

    [tasks.sshadd]
    description = "adds identity to ssh-agent for git and publish operations"
    clear = true
    script = [
        "ssh-add /home/luciano/.ssh/luciano_googlecloud",
        "ssh-add /home/luciano/.ssh/lucianobestia_mac",
        "ssh-add -l",
    ]

    [tasks.gitpush]
    description = "push the commits to github, uses ssh agent"
    clear = true
    script = [
        "echo $ git push",
        "git push",
        "echo after successful git push, use $ cargo make crates_io_dry_run or publish_to_web",
    ]

    [tasks.publish_to_web]
    description = "publish to web server"
    workspace = false
    clear = true
    # backslash is the escape character for all other special characters.
    # and then another time I have to escape the backslash. So 4 backslash for one backslash.
    script = [
        # every publish script is different
        "echo $ Empty script for publish_to_web",
    ]
    # end of publish script

    [tasks.crates_io_dry_run]
    clear = true
    description = "prepare before publishing to crates.io with dry-run"
    script = [
        "echo $ cargo publish --dry-run",
        "cargo publish --dry-run",
        "echo after successful dry-run, use $ cargo make crates_io_publish",
    ]

    [tasks.crates_io_publish]
    clear = true
    description = "gittag and publish to crates.io"
    script = [
        # gittag
        "echo $ git tag -f -a v${CARGO_MAKE_CRATE_VERSION} -m version_${CARGO_MAKE_CRATE_VERSION}",
        "git tag -f -a v${CARGO_MAKE_CRATE_VERSION} -m version_${CARGO_MAKE_CRATE_VERSION}",
        # cargo publish
        "echo $ cargo publish",
        "cargo publish",
    ]

    [tasks.increment_minor]
    description = "increments semver minor"
    clear = true
    script = [
        "lmake_semver --increment=minor",
    ]

    [tasks.loc]
    description = "Lines Of Rust Code with tokei"
    workspace = false
    clear = true
    script = [
        "tokei  -t 'Rust'",
    ]

# endregion

[tasks.help_command_order]
clear = true
private = true
description = "help developer to understand the order of exec commands"
script= [
"echo ",
"echo ORDER OF EXECUTING MAKE TASKS:",
"echo     clear - clear the screen",
"echo     cargo make - this list",
"echo 01. ..... change your code in the editor",
"echo 02. cargo make dev - build developer versions",
"echo 03. ......run the developer build. Cargo make tasks LIST is below.",
"echo 04. cargo make test - test the test code",
"echo 05. cargo make increment_minor - if needed increment semver minor",
"echo 06. cargo make release - build release version, increment semver patch incargo.toml",
"echo 07. ......run the release build. Cargo make tasks LIST is below.",
"echo ",
"echo 08. cargo make doc - includes from cargo.toml to readme.md and from readme.md to main.rs or lib.rs, generates doc and copies to docs folder.",
"echo 09. cargo make fmt commit_message - runs git commit and rustfmt",
"echo 10. cargo make sshadd - run only once - adds identity to ssh-agent for git and publish",
"echo 11. cargo make gitpush - git push",
"echo 12. cargo make publish_to_web",
"echo OR ",           
"echo 12. cargo make crates_io_dry_run - prepare publishing for crates.io",
"echo 13. cargo make crates_io_publish - gittag and publish to crates.io",
"echo ",
"echo LIST RUN WITH ARGUMENTS - release build",
"echo cargo make run_rel0 - no arguments target/release/${CARGO_MAKE_CRATE_NAME}",
"echo cargo make run_rel1 - target/release/${CARGO_MAKE_CRATE_NAME} argument1",
"echo ",
"echo CREV - cryptographic review system for rust",
"echo cargo crev verify",
"echo "
]

[tasks.build_dev]
clear = true
private = true
description = "build in dev/debug mode"
command = "cargo"
args = ["build"]

# Libraries version are semver, but binaries are dates.
[tasks.semver_increment_patch]
clear = true
private = true
description = "increment semver patch"
script= ["lmake_semver --increment=patch"]

# Binaries version are dates, but Libraries are semver.
# For PWA must update version also in the service_worker.js.
[tasks.lmake_version_from_date]
description = "in cargo.toml change version to today date"
clear = true
private = true
script= ["lmake_version_from_date"]

[tasks.build_release]
description = "build for release"
clear = true
private = true
script = [
    "echo $ cargo build --release",
    "cargo build --release",
    "echo after successful testing, run $ cargo make doc",
]

[tasks.cargo_audit]
description = "cargo audit - for security vulnerabilities"
clear = true
private = true
#command = "cargo"
#args = ["audit"]

[tasks.commit_before_fmt]
description = "git commit with message from argument"
clear = true
private = true
script = [
    "git add -A",
    "git commit -a -m \"${@}\""
]

[tasks.cargo_fmt]
description = "cargo fmt"
clear = true
private = true
script = [
    "echo $ cargo fmt",
    "cargo fmt",
    "echo after successful fmt and git commit, run $ cargo make gitpush",
    "echo if the fmt makes changes, just run the same command again."
]

[tasks.post_build_dev]
clear=true
private=true
script = [
    "echo post build dev",
]

[tasks.post_build_release]
clear=true
private=true
script = [
    "echo post build release",
]
